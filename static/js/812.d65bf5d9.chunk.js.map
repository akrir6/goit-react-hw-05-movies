{"version":3,"file":"static/js/812.d65bf5d9.chunk.js","mappings":"2MAGaA,EAAaC,EAAAA,EAAAA,GAAD,uNASZC,GAAUD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAD,wsB,mBCYtB,EApBkB,SAAC,GAAe,IAAbG,EAAY,EAAZA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACN,EAAD,UACKI,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACP,yBACI,UAACR,EAAD,CAAWS,GAAE,kBAAaH,GAAMI,MAAO,CAACC,KAAMR,GAA9C,WACA,gBACIS,IAAG,yCAAoCJ,GACvCK,IAAKN,KAET,uBAAIA,QANCD,EADF,KAatB,C,qICpBYQ,EAAUf,EAAAA,EAAAA,QAAD,+EAKTgB,EAAQhB,EAAAA,EAAAA,GAAH,8N,SCalB,EAfiB,WACb,OAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GAAQ,aAAEJ,EAAS,iBAACI,QAAD,IAACA,OAAD,EAACA,EAAUC,eAAX,QAAsB,GAAjC,GACpC,GAAE,KAGC,UAACT,EAAD,YACI,SAACC,EAAD,oCACA,SAACS,EAAA,EAAD,CAAWtB,MAAOe,MAG7B,C,2MCjBKQ,EAAS,mCAGR,SAAeL,IAAtB,4CAAO,OAAP,oBAAO,+FACCM,EAAS,IAAIC,gBAAgB,CACjCC,QAASH,IAFN,kBAKoBI,IAAAA,IAAA,6BAAgCH,IALpD,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCR,EAAS,IAAIC,gBAAgB,CACjCC,QAASH,EACTU,MAAOD,EACPE,KAAM,EACNC,eAAe,IALZ,kBAQoBR,IAAAA,IAAA,uBAA0BH,IAR9C,uBAQKI,EARL,EAQKA,KARL,kBASIA,GATJ,gCAWHC,QAAQC,IAAR,MAXG,gFAeA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kFACCb,EAAS,IAAIC,gBAAgB,CACjCC,QAASH,IAFN,kBAKoBI,IAAAA,IAAA,gBAAmBU,EAAnB,YAA8Bb,IALlD,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,kFACCb,EAAS,IAAIC,gBAAgB,CACjCC,QAASH,IAFN,kBAKoBI,IAAAA,IAAA,gBAAmBU,EAAnB,oBAAsCb,IAL1D,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,kFACCb,EAAS,IAAIC,gBAAgB,CACjCC,QAASH,IAFN,kBAKoBI,IAAAA,IAAA,gBAAmBU,EAAnB,oBAAsCb,IAL1D,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFArDPH,IAAAA,SAAAA,QAAyB,+B","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieWrapper=styled.ul`\n    display: grid;  \n    grid-template-rows: auto;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    column-gap: 32px;\n    row-gap: 16px;\n    align-items: center;\n\n`\nexport const MovieLink=styled(Link)`\n    display: block;\n    border: 1px solid #e3e3e3;\n    color: #0d253f;\n    border-radius: 8px;\n    box-shadow: 0 2px 8px rgb(0 0 0 / 10%);\n    transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1), \n        color 200ms cubic-bezier(0.4, 0, 0.2, 1), \n        background-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n    \n    img {\n        width: 100%;\n        display: block;\n        border-radius: 8px 8px 0 0; \n    }\n   \n    p {\n        padding: 4px 8px;\n        font-size: 16px;\n        font-weight: 600;\n        color: inherit;\n    }\n\n    :hover,\n    :focus {\n        color:#ffffff;\n        background-color: #01b4e4;\n        transform: scale(1.02);\n    }\n\n`\n","import { MovieWrapper, MovieLink } from \"./MovieList.styled\";\nimport PropTypes from 'prop-types';\nimport { useLocation } from \"react-router-dom\";\n\nconst MovieList = ({ items }) => {\n    const location = useLocation();\n\n    return (\n        <MovieWrapper>\n            {items.map(({ id, title, poster_path }) => (\n                <li key={id}>\n                    <MovieLink to={`/movies/${id}`} state={{from: location}}>\n                    <img\n                        src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                        alt={title}\n                    />\n                    <p>{title}</p>\n                </MovieLink>\n                </li>\n            ))}\n        </MovieWrapper>\n    )\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape(\n    {\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string,\n        poster: PropTypes.string,\n    })).isRequired\n}","import styled from \"@emotion/styled\";\n\nexport const Container=styled.section`\n    margin: 0 32px;\n    background-color: #ffffff;\n\n`\nexport const Title = styled.h1`\n    margin: 16px 0;\n    padding: 8px;\n    background-color: #90cea1;\n    border-radius:8px;  \n    text-align: center;\n    font-size: 32px;\n    color: #0d253f;\n    text-transform: uppercase;\n`\n","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies } from \"services/themoviedbAPI\";\nimport MovieList from 'components/MovieList/MovieList';\nimport { Container, Title } from './HomePage.styled';\n\nconst HomePage = () => {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() =>{ \n        getTrendingMovies().then(response=>setMovies(response?.results ?? []));\n    }, [])\n  \n    return (\n        <Container>\n            <Title>Popular today movies</Title>\n            <MovieList items={movies} />\n        </Container>\n    )\n}\n\nexport default HomePage;","import axios from 'axios';\nconst APIKEY = '7ad341c7e4bb32efb00f19fee102dc39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`trending/movie/day?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n    query: searchQuery,\n    page: 1,\n    include_adult: false,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByID(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["MovieWrapper","styled","MovieLink","Link","items","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Container","Title","useState","movies","setMovies","useEffect","getTrendingMovies","then","response","results","MovieList","APIKEY","params","URLSearchParams","api_key","axios","data","console","log","getMoviesByQuery","searchQuery","query","page","include_adult","getMovieByID","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}