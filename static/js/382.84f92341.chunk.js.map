{"version":3,"file":"static/js/382.84f92341.chunk.js","mappings":"qPAEaA,EAAcC,EAAAA,EAAAA,GAAH,+SAcXC,EAASD,EAAAA,EAAAA,GAAD,wZ,SCcrB,EAzBiB,WACb,OAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAQ,OAAEN,EAAY,OAACM,QAAD,IAACA,OAAD,EAACA,EAAUC,KAAzB,GACzC,GAAE,CAACN,KAGA,8BACKF,IACD,SAACJ,EAAD,UACKI,EAAUS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAb,OACX,UAACd,EAAD,YACI,gBACIe,IAAG,yCAAoCD,GACvCE,IAAKH,KAET,uBAAIA,MALOD,EADJ,OAY9B,C,2MC3BKK,EAAS,mCAGR,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,6BAAgCH,IALpD,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCR,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,EACTW,MAAOD,EACPE,KAAM,EACNC,eAAe,IALZ,kBAQoBR,IAAAA,IAAA,uBAA0BH,IAR9C,uBAQKI,EARL,EAQKA,KARL,kBASIA,GATJ,gCAWHC,QAAQC,IAAR,MAXG,gFAeA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4B3B,GAA5B,kFACCe,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBlB,EAAnB,YAA8Be,IALlD,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kFACCe,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBlB,EAAnB,oBAAsCe,IAL1D,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,kFACCe,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBlB,EAAnB,oBAAsCe,IAL1D,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFArDPH,IAAAA,SAAAA,QAAyB,+B","sources":["pages/CastPage/CastPage.styled.jsx","pages/CastPage/CastPage.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastWrapper = styled.ul`\n    padding: 8px;\n    display: grid;  \n    grid-template-rows: auto;\n    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n    column-gap: 8px;\n    row-gap: 8px;\n    align-items: center;\n\n\n    border: 2px solid #01b4e4;\n    border-radius: 0 4px 4px 4px;\n\n`\nexport const CastItem=styled.li`\n    display: block;\n    height: 200px;\n    border: 1px solid #e3e3e3;\n    color: #0d253f;\n    border-radius: 2px;\n    box-shadow: 0 2px 8px rgb(0 0 0 / 10%);\n       \n    img {\n        width: 100%;\n        display: block;\n        border-radius: 2px 2px 0 0; \n    }\n   \n    p {\n        padding: 4px 8px;\n        font-size: 12px;\n        color: inherit;\n    }\n\n   \n\n`\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCredits } from \"services/themoviedbAPI\";\nimport { CastItem, CastWrapper } from \"./CastPage.styled\";\n\nconst CastPage = () => {\n    const [movieCast, setMovieCast] = useState(null);\n    const { movieId } = useParams();\n    useEffect(() => {\n        getMovieCredits(movieId).then(response=>setMovieCast(response?.cast));\n    }, [movieId]);\n\n    return (\n        <>\n            {movieCast && \n            <CastWrapper>\n                {movieCast.map(({ id, name, profile_path }) => (\n                    <CastItem key={id}>\n                        <img\n                            src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                            alt={name}\n                        />\n                        <p>{name}</p>\n                    </CastItem>\n                ))}        \n            </CastWrapper>}\n        </>\n    )\n}\n\nexport default CastPage;","import axios from 'axios';\nconst APIKEY = '7ad341c7e4bb32efb00f19fee102dc39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`trending/movie/day?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n    query: searchQuery,\n    page: 1,\n    include_adult: true,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByID(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["CastWrapper","styled","CastItem","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCredits","then","response","cast","map","id","name","profile_path","src","alt","APIKEY","getTrendingMovies","params","URLSearchParams","api_key","axios","data","console","log","getMoviesByQuery","searchQuery","query","page","include_adult","getMovieByID","getMovieReviews"],"sourceRoot":""}