{"version":3,"file":"static/js/722.7eb3dcb5.chunk.js","mappings":"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","sources":["components/BadRequest/BadRequest.styled.jsx","components/BadRequest/BadRequest.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/MoviesPage/MoviesPage.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const BadRequestWrapper=styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    font-size: 24px ;\n    font-weight: 700;\n    color: #0d253f;\n`","import PropTypes from 'prop-types'\nimport { MdOutlineBrokenImage } from \"react-icons/md\";\nimport { BadRequestWrapper } from \"./BadRequest.styled\";\n\nexport const BadRequest = ({children}) => {\n    return (\n        <BadRequestWrapper>\n            <p>{children}</p>\n            <MdOutlineBrokenImage size={120} />\n        </BadRequestWrapper>\n    )\n}\n\nBadRequest.propTypes = {\n    children: PropTypes.string,    \n}","import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieWrapper=styled.ul`\n    display: grid;  \n    grid-template-rows: auto;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    column-gap: 32px;\n    row-gap: 16px;\n    align-items: center;\n\n`\nexport const MovieLink=styled(Link)`\n    display: block;\n    border: 1px solid #e3e3e3;\n    color: #0d253f;\n    border-radius: 8px;\n    box-shadow: 0 2px 8px rgb(0 0 0 / 10%);\n    transition: transform 200ms cubic-bezier(0.4, 0, 0.2, 1), \n        color 200ms cubic-bezier(0.4, 0, 0.2, 1), \n        background-color 200ms cubic-bezier(0.4, 0, 0.2, 1);\n    \n    img {\n        width: 100%;\n        display: block;\n        border-radius: 8px 8px 0 0; \n    }\n   \n    p {\n        padding: 4px 8px;\n        font-size: 16px;\n        font-weight: 600;\n        color: inherit;\n    }\n\n    :hover,\n    :focus {\n        color:#ffffff;\n        background-color: #01b4e4;\n        transform: scale(1.02);\n    }\n\n`\n","import { MovieWrapper, MovieLink } from \"./MovieList.styled\";\nimport PropTypes from 'prop-types';\nimport { useLocation } from \"react-router-dom\";\n\nconst MovieList = ({ items }) => {\n    const location = useLocation();\n\n    return (\n        <MovieWrapper>\n            {items.map(({ id, title, poster_path }) => (\n                <li key={id}>\n                    <MovieLink to={`/movies/${id}`} state={{from: location}}>\n                    <img\n                        src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                        alt={title}\n                    />\n                    <p>{title}</p>\n                </MovieLink>\n                </li>\n            ))}\n        </MovieWrapper>\n    )\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape(\n    {\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string,\n        poster: PropTypes.string,\n    })).isRequired\n}","import styled from \"@emotion/styled\";\n\nexport const Container=styled.div`\n    margin: 0 32px;\n    background-color: #ffffff;\n\n`","import styled from \"@emotion/styled\";\n\nexport const SearchbarStyled=styled.div`\n    margin: 16px 0;\n    padding: 8px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #90cea1;\n    border-radius:8px; \n`\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 400px;\n    color: #0d253f;\n    background-color: #ffffff;\n    border-radius: 4px;\n    overflow: hidden;\n`\n\nexport const SearchButton = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    color:#ffffff;\n    background-color: #0d253f;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    :hover,\n    :focus {\n        background-color: #01b4e4;\n     }\n`\n\n\nexport const SearchInput=styled.input`\n    display: inline-block;\n    padding: 4px;\n    width: 100%;\n    font: inherit;\n    font-size: 18px;\n    border: none;\n    outline: none;\n   \n  \n`\n\n\n","import { useEffect, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MdOutlineImageSearch } from \"react-icons/md\";\nimport { SearchbarStyled, SearchButton, SearchForm, SearchInput } from \"./Searchbar.styled\"\n\nexport const Searchbar = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchInput = useRef();\n    \n    useEffect(() => {\n        const query = searchParams.get('query');\n        if (query) {\n            searchInput.current.value = query;\n        }\n    },[searchParams])\n    \n    const setQuery = (e) => {\n        e.preventDefault();\n        const query =  e.target.elements.searchInput.value.trim();\n        query ? setSearchParams({ query }) : setSearchParams({ });\n    }\n    \n    return (\n        <SearchbarStyled>\n            <SearchForm onSubmit={setQuery}>\n                <SearchButton type=\"submit\">\n                    <MdOutlineImageSearch size={24} />\n                </SearchButton>\n\n                <SearchInput\n                    name=\"searchInput\"\n                    type=\"text\"\n                    autocomplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    ref={searchInput}\n                />\n            </SearchForm>\n        </SearchbarStyled>\n    )\n}\n\n","import { useState, useEffect } from \"react\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { Container } from \"./MoviesPage.styled\";\nimport { getMoviesByQuery } from \"services/themoviedbAPI\";\nimport { Searchbar } from \"components/Searchbar/Searchbar\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { BadRequest } from \"components/BadRequest/BadRequest\";\n\nconst MoviesPage = () => {\n    const [searchedMovies, setSearchedMovies] = useState([]);\n    const [searchParams] = useSearchParams();\n    const [empty, setEmpty] = useState(false);\n    useEffect(() => {\n        const query = searchParams.get('query');\n        if (query) {\n            getMoviesByQuery(query).then(response => {\n                setSearchedMovies(response?.results ?? []);\n                setEmpty(response?.results?.length)\n            });\n        }\n    },[searchParams])\n  \n    return (\n        <Container>\n            <Searchbar />\n            {searchedMovies.length > 0 && <MovieList items={searchedMovies} />}\n            {empty && <BadRequest>\n                Sorry, there are no films matching your search query. Please try again.\n            </BadRequest>}\n                \n        </Container>\n    )\n}\n\nexport default MoviesPage;","import axios from 'axios';\nconst APIKEY = '7ad341c7e4bb32efb00f19fee102dc39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`trending/movie/day?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n    query: searchQuery,\n    page: 1,\n    include_adult: true,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByID(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["BadRequestWrapper","styled","BadRequest","children","size","MovieWrapper","MovieLink","Link","items","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Container","SearchbarStyled","SearchForm","SearchButton","SearchInput","Searchbar","useSearchParams","searchParams","setSearchParams","searchInput","useRef","useEffect","query","get","current","value","onSubmit","e","preventDefault","target","elements","trim","type","name","autocomplete","autoFocus","placeholder","ref","useState","searchedMovies","setSearchedMovies","empty","setEmpty","getMoviesByQuery","then","response","results","length","MovieList","APIKEY","getTrendingMovies","params","URLSearchParams","api_key","axios","data","console","log","searchQuery","page","include_adult","getMovieByID","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}