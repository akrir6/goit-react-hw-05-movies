{"version":3,"file":"static/js/94.19103142.chunk.js","mappings":"8LAEaA,E,QAAkBC,EAAAA,IAAD,wK,SCEjBC,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACxB,OACI,UAACH,EAAD,YACI,uBAAIG,KACJ,SAAC,MAAD,CAAsBC,KAAM,QAGvC,C,8ICTYC,EAAiBJ,EAAAA,EAAAA,GAAH,4GAOdK,EAAcL,EAAAA,EAAAA,GAAH,8W,SCwBxB,EA1BoB,WAChB,OAAwCM,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAQ,aAAEN,EAAe,iBAACM,QAAD,IAACA,OAAD,EAACA,EAAUC,eAAX,QAAsB,GAAvC,GACzC,GAAE,CAACN,KAGA,SAACL,EAAD,UACKG,EAAaS,OAAS,EAEjBT,EAAaU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACf,UAACf,EAAD,YACI,wBAAKe,KACL,uBAAID,MAFUD,EADH,KAOjB,SAACjB,EAAA,EAAD,mDAMjB,C,2MC9BKoB,EAAS,mCAGR,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,6BAAgCH,IALpD,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCR,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,EACTW,MAAOD,EACPE,KAAM,EACNC,eAAe,IALZ,kBAQoBR,IAAAA,IAAA,uBAA0BH,IAR9C,uBAQKI,EARL,EAQKA,KARL,kBASIA,GATJ,gCAWHC,QAAQC,IAAR,MAXG,gFAeA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4B1B,GAA5B,kFACCc,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBjB,EAAnB,YAA8Bc,IALlD,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+B3B,GAA/B,kFACCc,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBjB,EAAnB,oBAAsCc,IAL1D,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kFACCc,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBjB,EAAnB,oBAAsCc,IAL1D,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFArDPH,IAAAA,SAAAA,QAAyB,+B","sources":["components/BadRequest/BadRequest.styled.jsx","components/BadRequest/BadRequest.jsx","pages/ReviewsPage/ReviewsPage.styled.jsx","pages/ReviewsPage/ReviewsPage.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const BadRequestWrapper=styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    font-size: 24px ;\n    font-weight: 700;\n    color: #0d253f;\n`","import PropTypes from 'prop-types'\nimport { MdOutlineBrokenImage } from \"react-icons/md\";\nimport { BadRequestWrapper } from \"./BadRequest.styled\";\n\nexport const BadRequest = ({children}) => {\n    return (\n        <BadRequestWrapper>\n            <p>{children}</p>\n            <MdOutlineBrokenImage size={120} />\n        </BadRequestWrapper>\n    )\n}\n\nBadRequest.propTypes = {\n    children: PropTypes.string,    \n}","import styled from \"@emotion/styled\";\n\nexport const ReviewsWrapper = styled.ul`\n    padding: 8px;\n    \n    border: 2px solid #01b4e4;\n    border-radius: 4px;\n\n`\nexport const ReviewsItem = styled.li`\n    margin-bottom: 4px;\n    padding: 4px 8px;\n    color: #0d253f;\n    border-radius: 2px;\n    box-shadow: 0 2px 8px rgb(0 0 0 / 10%);\n    border-bottom: 1px dotted #0d253f;\n    \n    h3 {\n        padding: 0 16px;\n        text-transform: uppercase;\n    }\n\n    p {\n        font-size: 12px;\n        color: inherit;\n    }\n\n   \n\n`\n","import { BadRequest } from \"components/BadRequest/BadRequest\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"services/themoviedbAPI\";\nimport { ReviewsItem, ReviewsWrapper } from \"./ReviewsPage.styled\";\n\n\nconst ReviewsPage = () => {\n    const [movieReviews, setMovieReviews] = useState([]);\n    const { movieId } = useParams();\n    useEffect(() => {\n        getMovieReviews(movieId).then(response=>setMovieReviews(response?.results ?? []));\n    }, [movieId]);\n       \n    return (\n        <ReviewsWrapper>\n            {movieReviews.length > 0\n                \n                ? movieReviews.map(({ id, content, author }) => (\n                    <ReviewsItem key={id}>\n                        <h3>{author}</h3>\n                        <p>{content}</p>\n                    </ReviewsItem>\n                ))\n                \n                : <BadRequest>\n                    There are no reviews for this movie\n                </BadRequest>\n            }\n        </ReviewsWrapper>\n    )\n}\n\nexport default ReviewsPage;","import axios from 'axios';\nconst APIKEY = '7ad341c7e4bb32efb00f19fee102dc39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`trending/movie/day?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n    query: searchQuery,\n    page: 1,\n    include_adult: true,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByID(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["BadRequestWrapper","styled","BadRequest","children","size","ReviewsWrapper","ReviewsItem","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getMovieReviews","then","response","results","length","map","id","content","author","APIKEY","getTrendingMovies","params","URLSearchParams","api_key","axios","data","console","log","getMoviesByQuery","searchQuery","query","page","include_adult","getMovieByID","getMovieCredits"],"sourceRoot":""}