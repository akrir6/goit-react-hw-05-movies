{"version":3,"file":"static/js/359.6f051b68.chunk.js","mappings":"sPAEaA,EAAUC,EAAAA,EAAAA,IAAH,2SAgBPC,EAAOD,EAAAA,EAAAA,IAAD,0KAUNE,EAAQF,EAAAA,EAAAA,GAAD,6P,SCSpB,EAhCkB,WACd,OAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC9B,GAAE,CAACC,KAGA,8BACCF,IAAS,UAACL,EAAD,YACN,SAACE,EAAD,CACIU,IAAG,yCAAoCP,EAAMQ,aAAeC,IAAKT,EAAMU,SAE3E,UAACZ,EAAD,YACI,2BACI,kCAAQE,EAAMU,MAAd,aAAwBV,EAAMW,aAAaC,MAAM,EAAG,GAApD,QACA,6CAAwC,GAArBZ,EAAMa,aAAzB,WAEJ,2BACI,sCACA,uBAAIb,EAAMc,eAEd,2BACI,oCACA,uBAAId,EAAMe,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,iBAM1D,C,2MClCKC,EAAS,mCAGR,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACCC,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,6BAAgCH,IALpD,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCR,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,EACTW,MAAOD,EACPE,KAAM,EACNC,eAAe,IALZ,kBAQoBR,IAAAA,IAAA,uBAA0BH,IAR9C,uBAQKI,EARL,EAQKA,KARL,kBASIA,GATJ,gCAWHC,QAAQC,IAAR,MAXG,gFAeA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kFACCoB,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBvB,EAAnB,YAA8BoB,IALlD,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BhC,GAA/B,kFACCoB,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBvB,EAAnB,oBAAsCoB,IAL1D,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFAYA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,kFACCoB,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAFN,kBAKoBK,IAAAA,IAAA,gBAAmBvB,EAAnB,oBAAsCoB,IAL1D,uBAKKI,EALL,EAKKA,KALL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,MARG,gFArDPH,IAAAA,SAAAA,QAAyB,+B","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n    margin: 8px 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-radius: 8px;\n    background-color: #01b4e450;\n\n\n    @media screen and (min-width: 768px) {\n        flex-direction: row;\n        align-items: flex-start;\n    }\n\n`\n\nexport const Poster=styled.img`\n    width: 100%;\n    max-width: 767px;\n    @media screen and (min-width: 768px) {\n        max-width: 250px;\n    }\n\n    border-radius: 8px;\n`\n\nexport const Details=styled.ul`\n    color: #0d253f;\n    padding: 16px;\n\n    li:not(:last-child) {\n        margin-bottom: 16px;\n        border-bottom: 1px dotted  #0d253f;\n    }\n    h2, h3 {\n        margin: 0;\n        text-transform: uppercase;\n    }\n`","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieByID } from \"services/themoviedbAPI\";\nimport { Wrapper, Poster, Details } from \"./MovieInfo.styled\";\n\nconst MovieInfo = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n    useEffect(() => {\n        getMovieByID(movieId).then(setMovie);\n    }, [movieId]);\n\n    return (\n        <>\n        {movie && <Wrapper>\n            <Poster\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title}\n            />\n            <Details>\n                <li>\n                    <h2>{`${movie.title} (${movie.release_date.slice(0, 4)})`}</h2>\n                    <p>{`User Score: ${movie.vote_average * 10}%`}</p>\n                </li>\n                <li>\n                    <h3>Overview</h3>\n                    <p>{movie.overview}</p>\n                </li>\n                <li>\n                    <h3>Genres</h3>\n                    <p>{movie.genres.map(g => g.name).join(' ')}</p>\n                </li>\n            </Details>\n        </Wrapper>}\n        </>\n    )\n}\n\nexport default MovieInfo;","import axios from 'axios';\nconst APIKEY = '7ad341c7e4bb32efb00f19fee102dc39';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`trending/movie/day?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n    query: searchQuery,\n    page: 1,\n    include_adult: false,\n  });\n  try {\n    const { data } = await axios.get(`search/movie?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieByID(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const params = new URLSearchParams({\n    api_key: APIKEY,\n  });\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews?${params}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Wrapper","styled","Poster","Details","useState","movie","setMovie","movieId","useParams","useEffect","getMovieByID","then","src","poster_path","alt","title","release_date","slice","vote_average","overview","genres","map","g","name","join","APIKEY","getTrendingMovies","params","URLSearchParams","api_key","axios","data","console","log","getMoviesByQuery","searchQuery","query","page","include_adult","getMovieCredits","getMovieReviews"],"sourceRoot":""}